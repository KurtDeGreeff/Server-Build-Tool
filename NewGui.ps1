#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 32aed7c1-e418-481f-9525-d997a49c9593
# Source File: ..\..\Server Build Tool\Server Build Tool.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
CgIAAB+LCAAAAAAABACNkV1rwyAUhu8L/Q/ifWptE1rBeLF2HbvYB23Y7XDJyXCYGDQZ67+fmUlJ
GYxdPvqe98EjP0JuPsGe97KVYj5DiD9b8wF5+wMeX8A6ZWpBF5STEYa7g9JwvxfrlYRik9MIYrqN
4i0tI5askqhgbCNjlrOErTkZwsPoYMnODYglJ1Mcy40uvA6Rqc0NMCA6QgkW6hweZQUpxuimU7pI
8RKLUytt2zWLxrkg/3t0J7WOHqSqD8ZWr40rp13juS8r/112p82b1L6KTqrQzlSVrIvbrxbqfpcp
zmwHWIS08wZ6ZQgQ3n3ZU6Anq95VLXUf6L3iBNb/ZZChzBjt2xo/wcmv6HzGydXffwN5llF/CgIA
AA==#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.122
     Generated on:       7/6/2016 10:34 AM
     Generated by:       Phillip Marshall
     Organization:       White & Case
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2016
#>


#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YgMAAB+LCAAAAAAABAC9k01LA0EMhu9C/8PQ87If3a5rYXZBWnopqFhRr9lttgzOR0lmLPvvbatU
0YMgsuSSNyF5CEnkPbbuFalfgAdxcFg5W40n43p0IYS8JbVVFvRSabwBg/XaA/mwi3fMMvmRPdVc
M6NptEI+6c9IXxtuHWnVROLxgzSN06NFYh60D4SVxeAJdCTuwqFHu8L+wb2grZqyhKItLrNZPsX0
aiaTc9fvlHXPHs0QjPhJ2Y3bc7x0ZHgQ4nFPw4AI9spu/8JK867oyi7LNkUKOfzOejZ6kJnmjvD/
QWf5fvIy+fpT9RvJGdnIYgMAAA==#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Call-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$global:ExitCode = 0 #Set the exit code for the Packager
}






#endregion Source: Startup.pss

#region Source: MainForm.psf
function Call-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
A3lzaqve/wGGeBuCL7oAAA==#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$Form = New-Object 'System.Windows.Forms.Form'
	$buttonClear = New-Object 'System.Windows.Forms.Button'
	$buttonExit = New-Object 'System.Windows.Forms.Button'
	$richtextbox1 = New-Object 'System.Windows.Forms.RichTextBox'
	$groupbox10 = New-Object 'System.Windows.Forms.GroupBox'
	$RAMComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$RAMSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$VCPUsComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$VCPUsSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox9 = New-Object 'System.Windows.Forms.GroupBox'
	$VMnameInputBox = New-Object 'System.Windows.Forms.TextBox'
	$VMnameInputBoxLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox8 = New-Object 'System.Windows.Forms.GroupBox'
	$CustomizationSelectioncomboBox = New-Object 'System.Windows.Forms.ComboBox'
	$CustomizationSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox7 = New-Object 'System.Windows.Forms.GroupBox'
	$TemplateSelectionComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$TemplateSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox6 = New-Object 'System.Windows.Forms.GroupBox'
	$DataStoreClusterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$DataStoreClusterSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox5 = New-Object 'System.Windows.Forms.GroupBox'
	$ESXClustersComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$ESXHostsSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox4 = New-Object 'System.Windows.Forms.GroupBox'
	$LocalOfficeSelectionComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$LocalOfficeSelectionLabel = New-Object 'System.Windows.Forms.Label'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$VCenterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$VCenterSelection = New-Object 'System.Windows.Forms.Label'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$ExtraDriveCounter = New-Object 'System.Windows.Forms.NumericUpDown'
	$ExtraDrive5_SizeTextBox = New-Object 'System.Windows.Forms.TextBox'
	$ExtraDrive4_SizeTextBox = New-Object 'System.Windows.Forms.TextBox'
	$DriveInfoTextBox = New-Object 'System.Windows.Forms.TextBox'
	$ExtraDrive3_SizeTextBox = New-Object 'System.Windows.Forms.TextBox'
	$ExtraDrive2_SizeTextBox = New-Object 'System.Windows.Forms.TextBox'
	$ExtraDrive1_SizeTextBox = New-Object 'System.Windows.Forms.TextBox'
	$ExtraDrive5_letterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$ExtraDrive5_SelectionLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive4_letterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$ExtraDrive4_SelectionLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive5_SizeLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive3_letterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$ExtraDrive3_SelectionLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive2_letterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$ExtraDrive2_SelectionLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive1_letterComboBox = New-Object 'System.Windows.Forms.ComboBox'
	$ExtraDrive1_SelectionLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive1_SizeLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive2_SizeLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive3_SizeLabel = New-Object 'System.Windows.Forms.Label'
	$ExtraDrive4_SizeLabel = New-Object 'System.Windows.Forms.Label'
	$ConfigureVMButton = New-Object 'System.Windows.Forms.Button'
	$CreateVMButton = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	Import-Module -Name VMware.VimAutomation.Core
	
	$Form_Load={
	#TODO: Initialize Form Controls here
	
	}
	
	
	#region Control Helper Functions
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	
	$VCenterComboBox_SelectedIndexChanged={
		$Global:VMCreationSelections.VCenterServer = $($VCenterComboBox.SelectedItem)
		Write-Debug -Message "Server = $($Global:VMCreationSelections.VCenterServer)"
		Write-RichText -LogType 'Informational' -LogMsg "Connecting to $($Global:VMCreationSelections.VCenterServer) please be patient."
		$Script:Credentials = Get-Credential
		ConnectTo-VCenter
		
	}
	
	$LocalOfficeSelectionComboBox_SelectedIndexChanged={
		$Global:VMCreationSelections.Location = $($LocalOfficeSelectionComboBox.SelectedItem)
		Write-Debug -Message "Location = $($Global:VMCreationSelections.Location)"
		
		Write-RichText -LogType 'Informational' -LogMsg "Retrieving ESX Clusters please be patient."
		
		Populate-ESXClustersDropDown
		
	}
	
	$ESXClustersComboBox_SelectedIndexChanged={
		$Clusters = Get-Cluster -Server $Global:VMCreationSelections.VCenterServer `
								-location $Global:VMCreationSelections.Location `
								-Name $ESXClustersComboBox.SelectedItem
		If ($Clusters)
		{
			$Global:VMCreationSelections.ResourcePool = $Clusters
		}
		
		Else
		{
			$VMHosts = Get-VMHost -Server $Global:VMCreationSelections.VCenterServer `
								  -location $Global:VMCreationSelections.Location `
								  -Name $ESXClustersComboBox.SelectedItem
			
			$Global:VMCreationSelections.ResourcePool = $VMHosts
		}
		
		Write-Debug -Message "Location = $($Global:VMCreationSelections.ResourcePool)"
		Write-RichText -LogType 'Informational' -LogMsg "Retrieving Datastores please be patient."
		
		Populate-DatastoreClusterDropDown
		
	}
	
	$DataStoreClusterComboBox_SelectedIndexChanged={
		$DataStoreClusters = Get-DataStoreCluster -Server $Global:VMCreationSelections.VCenterServer `
												  -Location $Global:VMCreationSelections.Location `
												  -name $DataStoreClusterComboBox.SelectedItem
		
		If ($DataStoreClusters)
		{
			$Global:VMCreationSelections.Datastore = $DataStoreClusters
		}
		
		Else
		{
			$DataStores = Get-DataStore -Server $Global:VMCreationSelections.VCenterServer `
										-Location $Global:VMCreationSelections.Location `
										-name $DataStoreClusterComboBox.SelectedItem
			
			$Global:VMCreationSelections.Datastore = $DataStores
		}
		
		Write-Debug -Message "Location = $($Global:VMCreationSelections.DataStore)"
		Write-RichText -LogType 'Informational' -LogMsg "Retrieving Templates please be patient."
		
		Populate-TemplateDropDown
		
	}
	
	$TemplateSelectionComboBox_SelectedIndexChanged={
		$Global:VMCreationSelections.Template = Get-Template -Server $($Global:VMCreationSelections.VCenterServer) `
															 -Location $($Global:VMCreationSelections.Location) `
															 -Name $($TemplateSelectionComboBox.SelectedItem)
		
		
		Write-RichText -LogType 'Informational' -LogMsg "Retrieving Customizations please be patient."
		
		Populate-CustomizationDropDown
		
	}
	
	$VMnameInputBox_TextChanged={
		$Global:VMCreationSelections.Name = $VMnameInputBox.Text
		$CreateVMButton.Enabled = $True
		
	}
	
	$CreateVMButton_Click={
		$richtextbox1.clear()
		
		Write-RichText -LogType informational -LogMsg "VCenter server : $($Global:VMCreationSelections.VCenterServer)"
		Write-RichText -LogType informational -LogMsg "ESXCluster : $($Global:VMCreationSelections.ResourcePool)"
		Write-RichText -LogType informational -LogMsg "Location : $($Global:VMCreationSelections.Location)"
		Write-RichText -LogType informational -LogMsg "VM Name : $($Global:VMCreationSelections.Name)"
		Write-RichText -LogType informational -LogMsg "DataStore : $($Global:VMCreationSelections.Datastore)"
		Write-RichText -LogType informational -LogMsg "Template : $($Global:VMCreationSelections.Template)"
		Write-RichText -LogType informational -LogMsg "Customization : $($Global:VMCreationSelections.OSCustomizationSpec)"
		
		
		Write-RichText -LogType informational -LogMsg "VM Creation beginning please be patient."
		
		
		
		New-VM -Server $Global:VMCreationSelections.VCenterServer `
			   -ResourcePool $Global:VMCreationSelections.ResourcePool `
			   -Name $Global:VMCreationSelections.Name `
			   -Datastore $Global:VMCreationSelections.Datastore  `
			   -Template $Global:VMCreationSelections.Template `
			   -OSCustomizationSpec $Global:VMCreationSelections.OSCustomizationSpec
		
		Write-RichText -LogType informational -LogMsg "VM Creation Completed!"
		$VCPUsComboBox.Enabled = $True
		$RAMComboBox.Enabled = $True
		$ExtraDriveCounter.Enabled = $True
		$ConfigureVMButton.Enabled = $true
		
	}
	
	$CustomizationSelectioncomboBox_SelectedIndexChanged={
		
		$Global:VMCreationSelections.OSCustomizationSpec = Get-OSCustomizationSpec -Server $Global:VMCreationSelections.VCenterServer `
																				   -Name $CustomizationSelectioncomboBox.SelectedItem
		
		$VMnameInputBox.Enabled = $true
	}
	
	$ExtraDriveCounter_ValueChanged={
		switch ($ExtraDriveCounter.Value)
		{
			0 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $false
				$ExtraDrive1_letterComboBox.enabled = $false
				$ExtraDrive1_SizeTextBox.enabled = $false
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $false
				$ExtraDrive2_letterComboBox.enabled = $false
				$ExtraDrive2_SizeTextBox.enabled = $false
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $false
				$ExtraDrive3_letterComboBox.enabled = $false
				$ExtraDrive3_SizeTextBox.enabled = $false
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SizeTextBox.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SizeTextBox.enabled = $false
			}
			1 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SizeTextBox.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $false
				$ExtraDrive2_letterComboBox.enabled = $false
				$ExtraDrive2_SizeTextBox.enabled = $false
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $false
				$ExtraDrive3_letterComboBox.enabled = $false
				$ExtraDrive3_SizeTextBox.enabled = $false
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SizeTextBox.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SizeTextBox.enabled = $false
			}
			2 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SizeTextBox.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SizeTextBox.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $false
				$ExtraDrive3_letterComboBox.enabled = $false
				$ExtraDrive3_SizeTextBox.enabled = $false
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SizeTextBox.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SizeTextBox.enabled = $false
			}
			3 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SizeTextBox.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SizeTextBox.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $true
				$ExtraDrive3_letterComboBox.enabled = $true
				$ExtraDrive3_SizeTextBox.enabled = $true
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SizeTextBox.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SizeTextBox.enabled = $false
			}
			4 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SizeTextBox.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SizeTextBox.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $true
				$ExtraDrive3_letterComboBox.enabled = $true
				$ExtraDrive3_SizeTextBox.enabled = $true
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $true
				$ExtraDrive4_letterComboBox.enabled = $true
				$ExtraDrive4_SizeTextBox.enabled = $true
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SizeTextBox.enabled = $false
			}
			5{
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SizeTextBox.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SizeTextBox.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $true
				$ExtraDrive3_letterComboBox.enabled = $true
				$ExtraDrive3_SizeTextBox.enabled = $true
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $true
				$ExtraDrive4_letterComboBox.enabled = $true
				$ExtraDrive4_SizeTextBox.enabled = $true
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $true
				$ExtraDrive5_letterComboBox.enabled = $true
				$ExtraDrive5_SizeTextBox.enabled = $true
			}
		}
		
	}
	
	$ConfigureVMButton_Click={
		Set-VMCPUCount
		Set-VMRamAmount
		Add-VMDIsks
	}
	
	
	$ghf_Click={
		#TODO: Place custom script here
		
	}
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$Form.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_richtextbox1 = $richtextbox1.Text
		$script:MainForm_RAMComboBox = $RAMComboBox.Text
		$script:MainForm_RAMComboBox_SelectedItem = $RAMComboBox.SelectedItem
		$script:MainForm_VCPUsComboBox = $VCPUsComboBox.Text
		$script:MainForm_VCPUsComboBox_SelectedItem = $VCPUsComboBox.SelectedItem
		$script:MainForm_VMnameInputBox = $VMnameInputBox.Text
		$script:MainForm_CustomizationSelectioncomboBox = $CustomizationSelectioncomboBox.Text
		$script:MainForm_CustomizationSelectioncomboBox_SelectedItem = $CustomizationSelectioncomboBox.SelectedItem
		$script:MainForm_TemplateSelectionComboBox = $TemplateSelectionComboBox.Text
		$script:MainForm_TemplateSelectionComboBox_SelectedItem = $TemplateSelectionComboBox.SelectedItem
		$script:MainForm_DataStoreClusterComboBox = $DataStoreClusterComboBox.Text
		$script:MainForm_DataStoreClusterComboBox_SelectedItem = $DataStoreClusterComboBox.SelectedItem
		$script:MainForm_ESXClustersComboBox = $ESXClustersComboBox.Text
		$script:MainForm_ESXClustersComboBox_SelectedItem = $ESXClustersComboBox.SelectedItem
		$script:MainForm_LocalOfficeSelectionComboBox = $LocalOfficeSelectionComboBox.Text
		$script:MainForm_LocalOfficeSelectionComboBox_SelectedItem = $LocalOfficeSelectionComboBox.SelectedItem
		$script:MainForm_VCenterComboBox = $VCenterComboBox.Text
		$script:MainForm_VCenterComboBox_SelectedItem = $VCenterComboBox.SelectedItem
		$script:MainForm_ExtraDriveCounter = $ExtraDriveCounter.Value
		$script:MainForm_ExtraDrive5_SizeTextBox = $ExtraDrive5_SizeTextBox.Text
		$script:MainForm_ExtraDrive4_SizeTextBox = $ExtraDrive4_SizeTextBox.Text
		$script:MainForm_DriveInfoTextBox = $DriveInfoTextBox.Text
		$script:MainForm_ExtraDrive3_SizeTextBox = $ExtraDrive3_SizeTextBox.Text
		$script:MainForm_ExtraDrive2_SizeTextBox = $ExtraDrive2_SizeTextBox.Text
		$script:MainForm_ExtraDrive1_SizeTextBox = $ExtraDrive1_SizeTextBox.Text
		$script:MainForm_ExtraDrive5_letterComboBox = $ExtraDrive5_letterComboBox.Text
		$script:MainForm_ExtraDrive5_letterComboBox_SelectedItem = $ExtraDrive5_letterComboBox.SelectedItem
		$script:MainForm_ExtraDrive4_letterComboBox = $ExtraDrive4_letterComboBox.Text
		$script:MainForm_ExtraDrive4_letterComboBox_SelectedItem = $ExtraDrive4_letterComboBox.SelectedItem
		$script:MainForm_ExtraDrive3_letterComboBox = $ExtraDrive3_letterComboBox.Text
		$script:MainForm_ExtraDrive3_letterComboBox_SelectedItem = $ExtraDrive3_letterComboBox.SelectedItem
		$script:MainForm_ExtraDrive2_letterComboBox = $ExtraDrive2_letterComboBox.Text
		$script:MainForm_ExtraDrive2_letterComboBox_SelectedItem = $ExtraDrive2_letterComboBox.SelectedItem
		$script:MainForm_ExtraDrive1_letterComboBox = $ExtraDrive1_letterComboBox.Text
		$script:MainForm_ExtraDrive1_letterComboBox_SelectedItem = $ExtraDrive1_letterComboBox.SelectedItem
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$VMnameInputBox.remove_TextChanged($VMnameInputBox_TextChanged)
			$CustomizationSelectioncomboBox.remove_SelectedIndexChanged($CustomizationSelectioncomboBox_SelectedIndexChanged)
			$TemplateSelectionComboBox.remove_SelectedIndexChanged($TemplateSelectionComboBox_SelectedIndexChanged)
			$DataStoreClusterComboBox.remove_SelectedIndexChanged($DataStoreClusterComboBox_SelectedIndexChanged)
			$ESXClustersComboBox.remove_SelectedIndexChanged($ESXClustersComboBox_SelectedIndexChanged)
			$LocalOfficeSelectionComboBox.remove_SelectedIndexChanged($LocalOfficeSelectionComboBox_SelectedIndexChanged)
			$VCenterComboBox.remove_SelectedIndexChanged($VCenterComboBox_SelectedIndexChanged)
			$ExtraDriveCounter.remove_ValueChanged($ExtraDriveCounter_ValueChanged)
			$ConfigureVMButton.remove_Click($ConfigureVMButton_Click)
			$CreateVMButton.remove_Click($CreateVMButton_Click)
			$Form.remove_Load($Form_Load)
			$Form.remove_Load($Form_StateCorrection_Load)
			$Form.remove_Closing($Form_StoreValues_Closing)
			$Form.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$Form.SuspendLayout()
	$groupbox10.SuspendLayout()
	$groupbox9.SuspendLayout()
	$groupbox8.SuspendLayout()
	$groupbox7.SuspendLayout()
	$groupbox6.SuspendLayout()
	$groupbox5.SuspendLayout()
	$groupbox4.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	$ExtraDriveCounter.BeginInit()
	#
	# Form
	#
	$Form.Controls.Add($buttonClear)
	$Form.Controls.Add($buttonExit)
	$Form.Controls.Add($richtextbox1)
	$Form.Controls.Add($groupbox10)
	$Form.Controls.Add($groupbox9)
	$Form.Controls.Add($groupbox8)
	$Form.Controls.Add($groupbox7)
	$Form.Controls.Add($groupbox6)
	$Form.Controls.Add($groupbox5)
	$Form.Controls.Add($groupbox4)
	$Form.Controls.Add($groupbox2)
	$Form.Controls.Add($groupbox1)
	$Form.Controls.Add($ConfigureVMButton)
	$Form.Controls.Add($CreateVMButton)
	$Form.BackColor = 'ActiveCaption'
	$Form.ClientSize = '1268, 843'
	$Form.Name = 'Form'
	$Form.StartPosition = 'CenterScreen'
	$Form.Text = 'Main Form'
	$Form.add_Load($Form_Load)
	#
	# buttonClear
	#
	$buttonClear.Location = '1176, 657'
	$buttonClear.Name = 'buttonClear'
	$buttonClear.Size = '80, 80'
	$buttonClear.TabIndex = 64
	$buttonClear.Text = 'Clear'
	$buttonClear.UseVisualStyleBackColor = $True
	#
	# buttonExit
	#
	$buttonExit.Location = '1176, 751'
	$buttonExit.Name = 'buttonExit'
	$buttonExit.Size = '80, 80'
	$buttonExit.TabIndex = 63
	$buttonExit.Text = 'Exit'
	$buttonExit.UseVisualStyleBackColor = $True
	#
	# richtextbox1
	#
	$richtextbox1.Location = '5, 657'
	$richtextbox1.Name = 'richtextbox1'
	$richtextbox1.Size = '1138, 174'
	$richtextbox1.TabIndex = 62
	$richtextbox1.Text = ''
	#
	# groupbox10
	#
	$groupbox10.Controls.Add($RAMComboBox)
	$groupbox10.Controls.Add($RAMSelectionLabel)
	$groupbox10.Controls.Add($VCPUsComboBox)
	$groupbox10.Controls.Add($VCPUsSelectionLabel)
	$groupbox10.Location = '350, 5'
	$groupbox10.Name = 'groupbox10'
	$groupbox10.Size = '343, 149'
	$groupbox10.TabIndex = 61
	$groupbox10.TabStop = $False
	#
	# RAMComboBox
	#
	$RAMComboBox.DropDownStyle = 'DropDownList'
	$RAMComboBox.Enabled = $False
	$RAMComboBox.FormattingEnabled = $True
	[void]$RAMComboBox.Items.Add('2')
	[void]$RAMComboBox.Items.Add('4')
	[void]$RAMComboBox.Items.Add('8')
	[void]$RAMComboBox.Items.Add('16')
	[void]$RAMComboBox.Items.Add('32')
	[void]$RAMComboBox.Items.Add('64')
	[void]$RAMComboBox.Items.Add('128')
	[void]$RAMComboBox.Items.Add('256')
	$RAMComboBox.Location = '5, 104'
	$RAMComboBox.Name = 'RAMComboBox'
	$RAMComboBox.Size = '315, 25'
	$RAMComboBox.TabIndex = 18
	#
	# RAMSelectionLabel
	#
	$RAMSelectionLabel.Location = '5, 75'
	$RAMSelectionLabel.Margin = '3, 3, 3, 3'
	$RAMSelectionLabel.Name = 'RAMSelectionLabel'
	$RAMSelectionLabel.Size = '315, 20'
	$RAMSelectionLabel.TabIndex = 17
	$RAMSelectionLabel.Text = 'Please Select the desired amount of RAM (GB)'
	#
	# VCPUsComboBox
	#
	$VCPUsComboBox.DropDownStyle = 'DropDownList'
	$VCPUsComboBox.Enabled = $False
	$VCPUsComboBox.FormattingEnabled = $True
	[void]$VCPUsComboBox.Items.Add('2')
	[void]$VCPUsComboBox.Items.Add('4')
	[void]$VCPUsComboBox.Items.Add('8')
	[void]$VCPUsComboBox.Items.Add('16')
	[void]$VCPUsComboBox.Items.Add('32')
	$VCPUsComboBox.Location = '5, 47'
	$VCPUsComboBox.Name = 'VCPUsComboBox'
	$VCPUsComboBox.Size = '315, 25'
	$VCPUsComboBox.TabIndex = 16
	#
	# VCPUsSelectionLabel
	#
	$VCPUsSelectionLabel.Location = '5, 22'
	$VCPUsSelectionLabel.Margin = '3, 3, 3, 3'
	$VCPUsSelectionLabel.Name = 'VCPUsSelectionLabel'
	$VCPUsSelectionLabel.Size = '315, 20'
	$VCPUsSelectionLabel.TabIndex = 15
	$VCPUsSelectionLabel.Text = 'Please Select the Desired Number of Cores'
	#
	# groupbox9
	#
	$groupbox9.Controls.Add($VMnameInputBox)
	$groupbox9.Controls.Add($VMnameInputBoxLabel)
	$groupbox9.Location = '0, 515'
	$groupbox9.Name = 'groupbox9'
	$groupbox9.Size = '330, 80'
	$groupbox9.TabIndex = 60
	$groupbox9.TabStop = $False
	#
	# VMnameInputBox
	#
	$VMnameInputBox.Enabled = $False
	$VMnameInputBox.Location = '5, 47'
	$VMnameInputBox.Name = 'VMnameInputBox'
	$VMnameInputBox.Size = '293, 23'
	$VMnameInputBox.TabIndex = 13
	$VMnameInputBox.add_TextChanged($VMnameInputBox_TextChanged)
	#
	# VMnameInputBoxLabel
	#
	$VMnameInputBoxLabel.Location = '5, 22'
	$VMnameInputBoxLabel.Margin = '3, 3, 3, 3'
	$VMnameInputBoxLabel.Name = 'VMnameInputBoxLabel'
	$VMnameInputBoxLabel.Size = '293, 30'
	$VMnameInputBoxLabel.TabIndex = 12
	$VMnameInputBoxLabel.Text = 'Please Enter the Desired VM Name'
	#
	# groupbox8
	#
	$groupbox8.Controls.Add($CustomizationSelectioncomboBox)
	$groupbox8.Controls.Add($CustomizationSelectionLabel)
	$groupbox8.Location = '0, 430'
	$groupbox8.Name = 'groupbox8'
	$groupbox8.Size = '330, 80'
	$groupbox8.TabIndex = 59
	$groupbox8.TabStop = $False
	#
	# CustomizationSelectioncomboBox
	#
	$CustomizationSelectioncomboBox.DropDownStyle = 'DropDownList'
	$CustomizationSelectioncomboBox.Enabled = $False
	$CustomizationSelectioncomboBox.FormattingEnabled = $True
	$CustomizationSelectioncomboBox.Location = '5, 47'
	$CustomizationSelectioncomboBox.Name = 'CustomizationSelectioncomboBox'
	$CustomizationSelectioncomboBox.Size = '293, 25'
	$CustomizationSelectioncomboBox.TabIndex = 11
	$CustomizationSelectioncomboBox.add_SelectedIndexChanged($CustomizationSelectioncomboBox_SelectedIndexChanged)
	#
	# CustomizationSelectionLabel
	#
	$CustomizationSelectionLabel.Location = '5, 22'
	$CustomizationSelectionLabel.Margin = '3, 3, 3, 3'
	$CustomizationSelectionLabel.Name = 'CustomizationSelectionLabel'
	$CustomizationSelectionLabel.Size = '293, 30'
	$CustomizationSelectionLabel.TabIndex = 10
	$CustomizationSelectionLabel.Text = 'Please Select the Customization'
	#
	# groupbox7
	#
	$groupbox7.Controls.Add($TemplateSelectionComboBox)
	$groupbox7.Controls.Add($TemplateSelectionLabel)
	$groupbox7.Location = '0, 345'
	$groupbox7.Name = 'groupbox7'
	$groupbox7.Size = '330, 80'
	$groupbox7.TabIndex = 58
	$groupbox7.TabStop = $False
	#
	# TemplateSelectionComboBox
	#
	$TemplateSelectionComboBox.DropDownStyle = 'DropDownList'
	$TemplateSelectionComboBox.Enabled = $False
	$TemplateSelectionComboBox.FormattingEnabled = $True
	$TemplateSelectionComboBox.Location = '5, 47'
	$TemplateSelectionComboBox.Name = 'TemplateSelectionComboBox'
	$TemplateSelectionComboBox.Size = '293, 25'
	$TemplateSelectionComboBox.TabIndex = 9
	$TemplateSelectionComboBox.add_SelectedIndexChanged($TemplateSelectionComboBox_SelectedIndexChanged)
	#
	# TemplateSelectionLabel
	#
	$TemplateSelectionLabel.Location = '5, 22'
	$TemplateSelectionLabel.Margin = '3, 3, 3, 3'
	$TemplateSelectionLabel.Name = 'TemplateSelectionLabel'
	$TemplateSelectionLabel.Size = '293, 30'
	$TemplateSelectionLabel.TabIndex = 8
	$TemplateSelectionLabel.Text = 'Please Select the Template'
	#
	# groupbox6
	#
	$groupbox6.Controls.Add($DataStoreClusterComboBox)
	$groupbox6.Controls.Add($DataStoreClusterSelectionLabel)
	$groupbox6.Location = '0, 260'
	$groupbox6.Name = 'groupbox6'
	$groupbox6.Size = '330, 80'
	$groupbox6.TabIndex = 57
	$groupbox6.TabStop = $False
	#
	# DataStoreClusterComboBox
	#
	$DataStoreClusterComboBox.DropDownStyle = 'DropDownList'
	$DataStoreClusterComboBox.Enabled = $False
	$DataStoreClusterComboBox.FormattingEnabled = $True
	$DataStoreClusterComboBox.Location = '5, 47'
	$DataStoreClusterComboBox.Name = 'DataStoreClusterComboBox'
	$DataStoreClusterComboBox.Size = '293, 25'
	$DataStoreClusterComboBox.TabIndex = 7
	$DataStoreClusterComboBox.add_SelectedIndexChanged($DataStoreClusterComboBox_SelectedIndexChanged)
	#
	# DataStoreClusterSelectionLabel
	#
	$DataStoreClusterSelectionLabel.Location = '5, 22'
	$DataStoreClusterSelectionLabel.Margin = '3, 3, 3, 3'
	$DataStoreClusterSelectionLabel.Name = 'DataStoreClusterSelectionLabel'
	$DataStoreClusterSelectionLabel.Size = '293, 23'
	$DataStoreClusterSelectionLabel.TabIndex = 6
	$DataStoreClusterSelectionLabel.Text = 'Please Select the Datastore or Cluster'
	#
	# groupbox5
	#
	$groupbox5.Controls.Add($ESXClustersComboBox)
	$groupbox5.Controls.Add($ESXHostsSelectionLabel)
	$groupbox5.Location = '0, 175'
	$groupbox5.Name = 'groupbox5'
	$groupbox5.Size = '330, 80'
	$groupbox5.TabIndex = 56
	$groupbox5.TabStop = $False
	#
	# ESXClustersComboBox
	#
	$ESXClustersComboBox.DropDownStyle = 'DropDownList'
	$ESXClustersComboBox.Enabled = $False
	$ESXClustersComboBox.FormattingEnabled = $True
	$ESXClustersComboBox.Location = '5, 47'
	$ESXClustersComboBox.Name = 'ESXClustersComboBox'
	$ESXClustersComboBox.Size = '295, 25'
	$ESXClustersComboBox.TabIndex = 5
	$ESXClustersComboBox.add_SelectedIndexChanged($ESXClustersComboBox_SelectedIndexChanged)
	#
	# ESXHostsSelectionLabel
	#
	$ESXHostsSelectionLabel.Location = '5, 22'
	$ESXHostsSelectionLabel.Margin = '3, 3, 3, 3'
	$ESXHostsSelectionLabel.Name = 'ESXHostsSelectionLabel'
	$ESXHostsSelectionLabel.Size = '295, 20'
	$ESXHostsSelectionLabel.TabIndex = 4
	$ESXHostsSelectionLabel.Text = 'Please Select the ESX Host or Cluster'
	#
	# groupbox4
	#
	$groupbox4.Controls.Add($LocalOfficeSelectionComboBox)
	$groupbox4.Controls.Add($LocalOfficeSelectionLabel)
	$groupbox4.Location = '0, 90'
	$groupbox4.Name = 'groupbox4'
	$groupbox4.Size = '330, 80'
	$groupbox4.TabIndex = 55
	$groupbox4.TabStop = $False
	#
	# LocalOfficeSelectionComboBox
	#
	$LocalOfficeSelectionComboBox.DropDownStyle = 'DropDownList'
	$LocalOfficeSelectionComboBox.Enabled = $False
	$LocalOfficeSelectionComboBox.FormattingEnabled = $True
	$LocalOfficeSelectionComboBox.Location = '5, 47'
	$LocalOfficeSelectionComboBox.Name = 'LocalOfficeSelectionComboBox'
	$LocalOfficeSelectionComboBox.Size = '295, 25'
	$LocalOfficeSelectionComboBox.TabIndex = 3
	$LocalOfficeSelectionComboBox.add_SelectedIndexChanged($LocalOfficeSelectionComboBox_SelectedIndexChanged)
	#
	# LocalOfficeSelectionLabel
	#
	$LocalOfficeSelectionLabel.Location = '5, 22'
	$LocalOfficeSelectionLabel.Margin = '3, 3, 3, 3'
	$LocalOfficeSelectionLabel.Name = 'LocalOfficeSelectionLabel'
	$LocalOfficeSelectionLabel.Size = '295, 20'
	$LocalOfficeSelectionLabel.TabIndex = 2
	$LocalOfficeSelectionLabel.Text = 'Please Select the Local Office or Datacenter'
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($VCenterComboBox)
	$groupbox2.Controls.Add($VCenterSelection)
	$groupbox2.Location = '0, 5'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '330, 80'
	$groupbox2.TabIndex = 53
	$groupbox2.TabStop = $False
	#
	# VCenterComboBox
	#
	$VCenterComboBox.DropDownStyle = 'DropDownList'
	$VCenterComboBox.FormattingEnabled = $True
	[void]$VCenterComboBox.Items.Add('AM1-VCenter')
	[void]$VCenterComboBox.Items.Add('AP1-VCenter')
	[void]$VCenterComboBox.Items.Add('EM1-VCenter')
	$VCenterComboBox.Location = '5, 47'
	$VCenterComboBox.Name = 'VCenterComboBox'
	$VCenterComboBox.Size = '295, 25'
	$VCenterComboBox.TabIndex = 1
	$VCenterComboBox.add_SelectedIndexChanged($VCenterComboBox_SelectedIndexChanged)
	#
	# VCenterSelection
	#
	$VCenterSelection.Location = '5, 22'
	$VCenterSelection.Margin = '3, 3, 3, 3'
	$VCenterSelection.Name = 'VCenterSelection'
	$VCenterSelection.Size = '295, 20'
	$VCenterSelection.TabIndex = 0
	$VCenterSelection.Text = 'Please Select the VCenter Region'
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($ExtraDriveCounter)
	$groupbox1.Controls.Add($ExtraDrive5_SizeTextBox)
	$groupbox1.Controls.Add($ExtraDrive4_SizeTextBox)
	$groupbox1.Controls.Add($DriveInfoTextBox)
	$groupbox1.Controls.Add($ExtraDrive3_SizeTextBox)
	$groupbox1.Controls.Add($ExtraDrive2_SizeTextBox)
	$groupbox1.Controls.Add($ExtraDrive1_SizeTextBox)
	$groupbox1.Controls.Add($ExtraDrive5_letterComboBox)
	$groupbox1.Controls.Add($ExtraDrive5_SelectionLabel)
	$groupbox1.Controls.Add($ExtraDrive4_letterComboBox)
	$groupbox1.Controls.Add($ExtraDrive4_SelectionLabel)
	$groupbox1.Controls.Add($ExtraDrive5_SizeLabel)
	$groupbox1.Controls.Add($ExtraDrive3_letterComboBox)
	$groupbox1.Controls.Add($ExtraDrive3_SelectionLabel)
	$groupbox1.Controls.Add($ExtraDrive2_letterComboBox)
	$groupbox1.Controls.Add($ExtraDrive2_SelectionLabel)
	$groupbox1.Controls.Add($ExtraDrive1_letterComboBox)
	$groupbox1.Controls.Add($ExtraDrive1_SelectionLabel)
	$groupbox1.Controls.Add($ExtraDrive1_SizeLabel)
	$groupbox1.Controls.Add($ExtraDrive2_SizeLabel)
	$groupbox1.Controls.Add($ExtraDrive3_SizeLabel)
	$groupbox1.Controls.Add($ExtraDrive4_SizeLabel)
	$groupbox1.Location = '350, 160'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Size = '343, 435'
	$groupbox1.TabIndex = 52
	$groupbox1.TabStop = $False
	#
	# ExtraDriveCounter
	#
	$ExtraDriveCounter.Location = '286, 23'
	$ExtraDriveCounter.Maximum = 5
	$ExtraDriveCounter.Name = 'ExtraDriveCounter'
	$ExtraDriveCounter.ReadOnly = $True
	$ExtraDriveCounter.Size = '51, 23'
	$ExtraDriveCounter.TabIndex = 20
	$ExtraDriveCounter.add_ValueChanged($ExtraDriveCounter_ValueChanged)
	#
	# ExtraDrive5_SizeTextBox
	#
	$ExtraDrive5_SizeTextBox.Enabled = $False
	$ExtraDrive5_SizeTextBox.Location = '129, 401'
	$ExtraDrive5_SizeTextBox.Name = 'ExtraDrive5_SizeTextBox'
	$ExtraDrive5_SizeTextBox.Size = '100, 23'
	$ExtraDrive5_SizeTextBox.TabIndex = 55
	#
	# ExtraDrive4_SizeTextBox
	#
	$ExtraDrive4_SizeTextBox.Enabled = $False
	$ExtraDrive4_SizeTextBox.Location = '129, 343'
	$ExtraDrive4_SizeTextBox.Name = 'ExtraDrive4_SizeTextBox'
	$ExtraDrive4_SizeTextBox.Size = '100, 23'
	$ExtraDrive4_SizeTextBox.TabIndex = 54
	#
	# DriveInfoTextBox
	#
	$DriveInfoTextBox.BackColor = 'ControlLight'
	$DriveInfoTextBox.Location = '7, 22'
	$DriveInfoTextBox.Multiline = $True
	$DriveInfoTextBox.Name = 'DriveInfoTextBox'
	$DriveInfoTextBox.ReadOnly = $True
	$DriveInfoTextBox.Size = '257, 82'
	$DriveInfoTextBox.TabIndex = 19
	$DriveInfoTextBox.Text = 'The ''C'', ''D'', and ''P'' drives are automatically created. Please choose how many extra drives you need for this VM.'
	#
	# ExtraDrive3_SizeTextBox
	#
	$ExtraDrive3_SizeTextBox.Enabled = $False
	$ExtraDrive3_SizeTextBox.Location = '129, 280'
	$ExtraDrive3_SizeTextBox.Name = 'ExtraDrive3_SizeTextBox'
	$ExtraDrive3_SizeTextBox.Size = '100, 23'
	$ExtraDrive3_SizeTextBox.TabIndex = 53
	#
	# ExtraDrive2_SizeTextBox
	#
	$ExtraDrive2_SizeTextBox.Enabled = $False
	$ExtraDrive2_SizeTextBox.Location = '129, 220'
	$ExtraDrive2_SizeTextBox.Name = 'ExtraDrive2_SizeTextBox'
	$ExtraDrive2_SizeTextBox.Size = '100, 23'
	$ExtraDrive2_SizeTextBox.TabIndex = 52
	#
	# ExtraDrive1_SizeTextBox
	#
	$ExtraDrive1_SizeTextBox.Enabled = $False
	$ExtraDrive1_SizeTextBox.Location = '129, 163'
	$ExtraDrive1_SizeTextBox.Name = 'ExtraDrive1_SizeTextBox'
	$ExtraDrive1_SizeTextBox.Size = '100, 23'
	$ExtraDrive1_SizeTextBox.TabIndex = 51
	#
	# ExtraDrive5_letterComboBox
	#
	$ExtraDrive5_letterComboBox.DropDownStyle = 'DropDownList'
	$ExtraDrive5_letterComboBox.Enabled = $False
	$ExtraDrive5_letterComboBox.FormattingEnabled = $True
	[void]$ExtraDrive5_letterComboBox.Items.Add('A')
	[void]$ExtraDrive5_letterComboBox.Items.Add('B')
	[void]$ExtraDrive5_letterComboBox.Items.Add('E')
	[void]$ExtraDrive5_letterComboBox.Items.Add('F')
	[void]$ExtraDrive5_letterComboBox.Items.Add('G')
	[void]$ExtraDrive5_letterComboBox.Items.Add('H')
	[void]$ExtraDrive5_letterComboBox.Items.Add('I')
	[void]$ExtraDrive5_letterComboBox.Items.Add('J')
	[void]$ExtraDrive5_letterComboBox.Items.Add('K')
	[void]$ExtraDrive5_letterComboBox.Items.Add('L')
	[void]$ExtraDrive5_letterComboBox.Items.Add('M')
	[void]$ExtraDrive5_letterComboBox.Items.Add('N')
	[void]$ExtraDrive5_letterComboBox.Items.Add('O')
	[void]$ExtraDrive5_letterComboBox.Items.Add('Q')
	[void]$ExtraDrive5_letterComboBox.Items.Add('R')
	[void]$ExtraDrive5_letterComboBox.Items.Add('S')
	[void]$ExtraDrive5_letterComboBox.Items.Add('T')
	[void]$ExtraDrive5_letterComboBox.Items.Add('U')
	[void]$ExtraDrive5_letterComboBox.Items.Add('V')
	[void]$ExtraDrive5_letterComboBox.Items.Add('W')
	[void]$ExtraDrive5_letterComboBox.Items.Add('X')
	[void]$ExtraDrive5_letterComboBox.Items.Add('Y')
	[void]$ExtraDrive5_letterComboBox.Items.Add('Z')
	$ExtraDrive5_letterComboBox.Location = '7, 401'
	$ExtraDrive5_letterComboBox.Name = 'ExtraDrive5_letterComboBox'
	$ExtraDrive5_letterComboBox.Size = '69, 25'
	$ExtraDrive5_letterComboBox.TabIndex = 46
	#
	# ExtraDrive5_SelectionLabel
	#
	$ExtraDrive5_SelectionLabel.Location = '7, 371'
	$ExtraDrive5_SelectionLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive5_SelectionLabel.Name = 'ExtraDrive5_SelectionLabel'
	$ExtraDrive5_SelectionLabel.Size = '41, 23'
	$ExtraDrive5_SelectionLabel.TabIndex = 45
	$ExtraDrive5_SelectionLabel.Text = 'Drive'
	#
	# ExtraDrive4_letterComboBox
	#
	$ExtraDrive4_letterComboBox.DropDownStyle = 'DropDownList'
	$ExtraDrive4_letterComboBox.Enabled = $False
	$ExtraDrive4_letterComboBox.FormattingEnabled = $True
	[void]$ExtraDrive4_letterComboBox.Items.Add('A')
	[void]$ExtraDrive4_letterComboBox.Items.Add('B')
	[void]$ExtraDrive4_letterComboBox.Items.Add('E')
	[void]$ExtraDrive4_letterComboBox.Items.Add('F')
	[void]$ExtraDrive4_letterComboBox.Items.Add('G')
	[void]$ExtraDrive4_letterComboBox.Items.Add('H')
	[void]$ExtraDrive4_letterComboBox.Items.Add('I')
	[void]$ExtraDrive4_letterComboBox.Items.Add('J')
	[void]$ExtraDrive4_letterComboBox.Items.Add('K')
	[void]$ExtraDrive4_letterComboBox.Items.Add('L')
	[void]$ExtraDrive4_letterComboBox.Items.Add('M')
	[void]$ExtraDrive4_letterComboBox.Items.Add('N')
	[void]$ExtraDrive4_letterComboBox.Items.Add('O')
	[void]$ExtraDrive4_letterComboBox.Items.Add('Q')
	[void]$ExtraDrive4_letterComboBox.Items.Add('R')
	[void]$ExtraDrive4_letterComboBox.Items.Add('S')
	[void]$ExtraDrive4_letterComboBox.Items.Add('T')
	[void]$ExtraDrive4_letterComboBox.Items.Add('U')
	[void]$ExtraDrive4_letterComboBox.Items.Add('V')
	[void]$ExtraDrive4_letterComboBox.Items.Add('W')
	[void]$ExtraDrive4_letterComboBox.Items.Add('X')
	[void]$ExtraDrive4_letterComboBox.Items.Add('Y')
	[void]$ExtraDrive4_letterComboBox.Items.Add('Z')
	$ExtraDrive4_letterComboBox.Location = '7, 341'
	$ExtraDrive4_letterComboBox.Name = 'ExtraDrive4_letterComboBox'
	$ExtraDrive4_letterComboBox.Size = '69, 25'
	$ExtraDrive4_letterComboBox.TabIndex = 40
	#
	# ExtraDrive4_SelectionLabel
	#
	$ExtraDrive4_SelectionLabel.Location = '7, 311'
	$ExtraDrive4_SelectionLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive4_SelectionLabel.Name = 'ExtraDrive4_SelectionLabel'
	$ExtraDrive4_SelectionLabel.Size = '41, 23'
	$ExtraDrive4_SelectionLabel.TabIndex = 39
	$ExtraDrive4_SelectionLabel.Text = 'Drive'
	#
	# ExtraDrive5_SizeLabel
	#
	$ExtraDrive5_SizeLabel.Location = '129, 372'
	$ExtraDrive5_SizeLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive5_SizeLabel.Name = 'ExtraDrive5_SizeLabel'
	$ExtraDrive5_SizeLabel.Size = '100, 23'
	$ExtraDrive5_SizeLabel.TabIndex = 48
	$ExtraDrive5_SizeLabel.Text = 'Size (GB)'
	#
	# ExtraDrive3_letterComboBox
	#
	$ExtraDrive3_letterComboBox.DropDownStyle = 'DropDownList'
	$ExtraDrive3_letterComboBox.Enabled = $False
	$ExtraDrive3_letterComboBox.FormattingEnabled = $True
	[void]$ExtraDrive3_letterComboBox.Items.Add('A')
	[void]$ExtraDrive3_letterComboBox.Items.Add('B')
	[void]$ExtraDrive3_letterComboBox.Items.Add('E')
	[void]$ExtraDrive3_letterComboBox.Items.Add('F')
	[void]$ExtraDrive3_letterComboBox.Items.Add('G')
	[void]$ExtraDrive3_letterComboBox.Items.Add('H')
	[void]$ExtraDrive3_letterComboBox.Items.Add('I')
	[void]$ExtraDrive3_letterComboBox.Items.Add('J')
	[void]$ExtraDrive3_letterComboBox.Items.Add('K')
	[void]$ExtraDrive3_letterComboBox.Items.Add('L')
	[void]$ExtraDrive3_letterComboBox.Items.Add('M')
	[void]$ExtraDrive3_letterComboBox.Items.Add('N')
	[void]$ExtraDrive3_letterComboBox.Items.Add('O')
	[void]$ExtraDrive3_letterComboBox.Items.Add('Q')
	[void]$ExtraDrive3_letterComboBox.Items.Add('R')
	[void]$ExtraDrive3_letterComboBox.Items.Add('S')
	[void]$ExtraDrive3_letterComboBox.Items.Add('T')
	[void]$ExtraDrive3_letterComboBox.Items.Add('U')
	[void]$ExtraDrive3_letterComboBox.Items.Add('V')
	[void]$ExtraDrive3_letterComboBox.Items.Add('W')
	[void]$ExtraDrive3_letterComboBox.Items.Add('X')
	[void]$ExtraDrive3_letterComboBox.Items.Add('Y')
	[void]$ExtraDrive3_letterComboBox.Items.Add('Z')
	$ExtraDrive3_letterComboBox.Location = '7, 281'
	$ExtraDrive3_letterComboBox.Name = 'ExtraDrive3_letterComboBox'
	$ExtraDrive3_letterComboBox.Size = '69, 25'
	$ExtraDrive3_letterComboBox.TabIndex = 34
	#
	# ExtraDrive3_SelectionLabel
	#
	$ExtraDrive3_SelectionLabel.Location = '7, 251'
	$ExtraDrive3_SelectionLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive3_SelectionLabel.Name = 'ExtraDrive3_SelectionLabel'
	$ExtraDrive3_SelectionLabel.Size = '41, 23'
	$ExtraDrive3_SelectionLabel.TabIndex = 33
	$ExtraDrive3_SelectionLabel.Text = 'Drive'
	#
	# ExtraDrive2_letterComboBox
	#
	$ExtraDrive2_letterComboBox.DropDownStyle = 'DropDownList'
	$ExtraDrive2_letterComboBox.Enabled = $False
	$ExtraDrive2_letterComboBox.FormattingEnabled = $True
	[void]$ExtraDrive2_letterComboBox.Items.Add('A')
	[void]$ExtraDrive2_letterComboBox.Items.Add('B')
	[void]$ExtraDrive2_letterComboBox.Items.Add('E')
	[void]$ExtraDrive2_letterComboBox.Items.Add('F')
	[void]$ExtraDrive2_letterComboBox.Items.Add('G')
	[void]$ExtraDrive2_letterComboBox.Items.Add('H')
	[void]$ExtraDrive2_letterComboBox.Items.Add('I')
	[void]$ExtraDrive2_letterComboBox.Items.Add('J')
	[void]$ExtraDrive2_letterComboBox.Items.Add('K')
	[void]$ExtraDrive2_letterComboBox.Items.Add('L')
	[void]$ExtraDrive2_letterComboBox.Items.Add('M')
	[void]$ExtraDrive2_letterComboBox.Items.Add('N')
	[void]$ExtraDrive2_letterComboBox.Items.Add('O')
	[void]$ExtraDrive2_letterComboBox.Items.Add('Q')
	[void]$ExtraDrive2_letterComboBox.Items.Add('R')
	[void]$ExtraDrive2_letterComboBox.Items.Add('S')
	[void]$ExtraDrive2_letterComboBox.Items.Add('T')
	[void]$ExtraDrive2_letterComboBox.Items.Add('U')
	[void]$ExtraDrive2_letterComboBox.Items.Add('V')
	[void]$ExtraDrive2_letterComboBox.Items.Add('W')
	[void]$ExtraDrive2_letterComboBox.Items.Add('X')
	[void]$ExtraDrive2_letterComboBox.Items.Add('Y')
	[void]$ExtraDrive2_letterComboBox.Items.Add('Z')
	$ExtraDrive2_letterComboBox.Location = '7, 221'
	$ExtraDrive2_letterComboBox.Name = 'ExtraDrive2_letterComboBox'
	$ExtraDrive2_letterComboBox.Size = '69, 25'
	$ExtraDrive2_letterComboBox.TabIndex = 28
	#
	# ExtraDrive2_SelectionLabel
	#
	$ExtraDrive2_SelectionLabel.Location = '7, 191'
	$ExtraDrive2_SelectionLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive2_SelectionLabel.Name = 'ExtraDrive2_SelectionLabel'
	$ExtraDrive2_SelectionLabel.Size = '41, 23'
	$ExtraDrive2_SelectionLabel.TabIndex = 27
	$ExtraDrive2_SelectionLabel.Text = 'Drive'
	#
	# ExtraDrive1_letterComboBox
	#
	$ExtraDrive1_letterComboBox.DropDownStyle = 'DropDownList'
	$ExtraDrive1_letterComboBox.Enabled = $False
	$ExtraDrive1_letterComboBox.FormattingEnabled = $True
	[void]$ExtraDrive1_letterComboBox.Items.Add('A')
	[void]$ExtraDrive1_letterComboBox.Items.Add('B')
	[void]$ExtraDrive1_letterComboBox.Items.Add('E')
	[void]$ExtraDrive1_letterComboBox.Items.Add('F')
	[void]$ExtraDrive1_letterComboBox.Items.Add('G')
	[void]$ExtraDrive1_letterComboBox.Items.Add('H')
	[void]$ExtraDrive1_letterComboBox.Items.Add('I')
	[void]$ExtraDrive1_letterComboBox.Items.Add('J')
	[void]$ExtraDrive1_letterComboBox.Items.Add('K')
	[void]$ExtraDrive1_letterComboBox.Items.Add('L')
	[void]$ExtraDrive1_letterComboBox.Items.Add('M')
	[void]$ExtraDrive1_letterComboBox.Items.Add('N')
	[void]$ExtraDrive1_letterComboBox.Items.Add('O')
	[void]$ExtraDrive1_letterComboBox.Items.Add('Q')
	[void]$ExtraDrive1_letterComboBox.Items.Add('R')
	[void]$ExtraDrive1_letterComboBox.Items.Add('S')
	[void]$ExtraDrive1_letterComboBox.Items.Add('T')
	[void]$ExtraDrive1_letterComboBox.Items.Add('U')
	[void]$ExtraDrive1_letterComboBox.Items.Add('V')
	[void]$ExtraDrive1_letterComboBox.Items.Add('W')
	[void]$ExtraDrive1_letterComboBox.Items.Add('X')
	[void]$ExtraDrive1_letterComboBox.Items.Add('Y')
	[void]$ExtraDrive1_letterComboBox.Items.Add('Z')
	$ExtraDrive1_letterComboBox.Location = '7, 161'
	$ExtraDrive1_letterComboBox.Name = 'ExtraDrive1_letterComboBox'
	$ExtraDrive1_letterComboBox.Size = '69, 25'
	$ExtraDrive1_letterComboBox.TabIndex = 22
	#
	# ExtraDrive1_SelectionLabel
	#
	$ExtraDrive1_SelectionLabel.Location = '6, 131'
	$ExtraDrive1_SelectionLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive1_SelectionLabel.Name = 'ExtraDrive1_SelectionLabel'
	$ExtraDrive1_SelectionLabel.Size = '41, 23'
	$ExtraDrive1_SelectionLabel.TabIndex = 21
	$ExtraDrive1_SelectionLabel.Text = 'Drive'
	#
	# ExtraDrive1_SizeLabel
	#
	$ExtraDrive1_SizeLabel.Location = '129, 131'
	$ExtraDrive1_SizeLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive1_SizeLabel.Name = 'ExtraDrive1_SizeLabel'
	$ExtraDrive1_SizeLabel.Size = '100, 23'
	$ExtraDrive1_SizeLabel.TabIndex = 24
	$ExtraDrive1_SizeLabel.Text = 'Size (GB)'
	#
	# ExtraDrive2_SizeLabel
	#
	$ExtraDrive2_SizeLabel.Location = '129, 191'
	$ExtraDrive2_SizeLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive2_SizeLabel.Name = 'ExtraDrive2_SizeLabel'
	$ExtraDrive2_SizeLabel.Size = '100, 23'
	$ExtraDrive2_SizeLabel.TabIndex = 30
	$ExtraDrive2_SizeLabel.Text = 'Size (GB)'
	#
	# ExtraDrive3_SizeLabel
	#
	$ExtraDrive3_SizeLabel.Location = '129, 252'
	$ExtraDrive3_SizeLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive3_SizeLabel.Name = 'ExtraDrive3_SizeLabel'
	$ExtraDrive3_SizeLabel.Size = '100, 23'
	$ExtraDrive3_SizeLabel.TabIndex = 36
	$ExtraDrive3_SizeLabel.Text = 'Size (GB)'
	#
	# ExtraDrive4_SizeLabel
	#
	$ExtraDrive4_SizeLabel.Location = '129, 311'
	$ExtraDrive4_SizeLabel.Margin = '3, 3, 3, 3'
	$ExtraDrive4_SizeLabel.Name = 'ExtraDrive4_SizeLabel'
	$ExtraDrive4_SizeLabel.Size = '100, 23'
	$ExtraDrive4_SizeLabel.TabIndex = 42
	$ExtraDrive4_SizeLabel.Text = 'Size (GB)'
	#
	# ConfigureVMButton
	#
	$ConfigureVMButton.DialogResult = 'Cancel'
	$ConfigureVMButton.Enabled = $False
	$ConfigureVMButton.Location = '350, 601'
	$ConfigureVMButton.Name = 'ConfigureVMButton'
	$ConfigureVMButton.Size = '105, 50'
	$ConfigureVMButton.TabIndex = 51
	$ConfigureVMButton.Text = 'Configure VM'
	$ConfigureVMButton.UseVisualStyleBackColor = $True
	$ConfigureVMButton.add_Click($ConfigureVMButton_Click)
	#
	# CreateVMButton
	#
	$CreateVMButton.Enabled = $False
	$CreateVMButton.Location = '5, 601'
	$CreateVMButton.Name = 'CreateVMButton'
	$CreateVMButton.Size = '85, 50'
	$CreateVMButton.TabIndex = 14
	$CreateVMButton.Text = 'Create VM'
	$CreateVMButton.UseVisualStyleBackColor = $True
	$CreateVMButton.add_Click($CreateVMButton_Click)
	$ExtraDriveCounter.EndInit()
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$groupbox4.ResumeLayout()
	$groupbox5.ResumeLayout()
	$groupbox6.ResumeLayout()
	$groupbox7.ResumeLayout()
	$groupbox8.ResumeLayout()
	$groupbox9.ResumeLayout()
	$groupbox10.ResumeLayout()
	$Form.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $Form.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$Form.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$Form.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$Form.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $Form.ShowDialog()

}
#endregion Source: MainForm.psf

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	$Global:VMCreationSelections = New-Object –TypeName PSObject
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name VCenterServer -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name Location -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name ResourcePool -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name Name -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name Datastore -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name Template -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name OSCustomizationSpec -Value ''
	$Global:VMCreationSelections | Add-Member -MemberType NoteProperty -Name VCPUs -Value '2'
	
	[Int]$Global:DriveCounter = 0
	[Array]$Global:DriveLetterarray = @('', 'a', 'b', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'q', 'r', 's', 't', 'u', 'v', 'x', 'y', 'z')
	
	
	Function ConnectTo-VCenter{
		
		$Connection = Connect-VIServer -Server $Global:VMCreationSelections.VCenterServer `
									   -Credential $Script:Credentials
		
		If (!$Connection)
		{
			Write-Richtext -LogType 'Error' -LogMsg "Unable to connect to $($Global:VMCreationSelections.VCenterServer) ¯\_(ツ)_/¯."
			return;
		}
		
		Else
		{
			Write-Richtext -LogType 'Success' -LogMsg "Connected to $($Global:VMCreationSelections.VCenterServer)."
			Write-Richtext -LogType 'Informational' -LogMsg "Retrieving Local Offices please be patient."
			Populate-LocalOfficeDropDown
		}
	}
	
	Function Populate-TemplateDropDown{
		$Templates = Get-Template -Server $Global:VMCreationSelections.VCenterServer `
								  -Location $($LocalOfficeSelectionComboBox.SelectedItem)
		
		If (!$Templates)
		{
			Write-Richtext -LogType 'Error' -LogMsg "Unable to Gather templates from $($Global:VMCreationSelections.VCenterServer)."
		}
		
		Else
		{
			Write-Richtext -LogType 'Success' -LogMsg "Templates retrieved from $($Global:VMCreationSelections.VCenterServer)."
			
			$TemplateSelectionComboBox.Items.clear()
			
			Foreach ($Template in $Templates)
			{
				$TemplateSelectionComboBox.Items.Add($Template)
			}
			
			$TemplateSelectionComboBox.enabled = $True
		}
	}
	
	Function Populate-LocalOfficeDropDown{
		
		$LocalOffices = Get-Datacenter -Server $($Global:VMCreationSelections.VCenterServer)
		
		If (!$LocalOffices)
		{
			Write-Richtext -LogType 'Error' -LogMsg "Unable to Gather Local Offices from $($Global:VMCreationSelections.VCenterServer)"
		}
		
		Else
		{
			Write-Richtext -LogType 'Success' -LogMsg "Local Offices retrieved from $($Global:VMCreationSelections.VCenterServer)"
			$LocalOfficeSelectioncomboBox.Items.clear()
			Foreach ($Office in $LocalOffices)
			{
				$LocalOfficeSelectioncomboBox.Items.Add($Office)
			}
			
			$LocalOfficeSelectioncomboBox.enabled = $True
		}
		
	}
	
	Function Populate-CustomizationDropDown{
		
		$Customizations = Get-OSCustomizationSpec -Server $($Global:VMCreationSelections.VCenterServer)
		
		If (!$Customizations)
		{
			Write-Richtext -LogType 'Error' -LogMsg "Unable to Gather customizations from $($Global:VMCreationSelections.VCenterServer)."
		}
		
		Else
		{
			$CustomizationSelectioncomboBox.Items.clear()
			Foreach ($Item in $Customizations)
			{
				$CustomizationSelectioncomboBox.Items.Add($($Item.name))
			}
			
			$CustomizationSelectioncomboBox.enabled = $True
		}
	}
	
	Function Populate-ESXClustersDropDown{
		
		$Clusters = Get-Cluster -Server $($Global:VMCreationSelections.VCenterServer) `
								-location $($LocalOfficeSelectionComboBox.SelectedItem)
		
		$VMHosts = Get-VMHost -Server $($VCenterComboBox.SelectedItem) `
							  -location $($LocalOfficeSelectionComboBox.SelectedItem)
		
		If (!$Clusters -and !$VMHosts)
		{
			Write-Richtext -LogType 'Error' -LogMsg "Unable to Gather ESX Hosts or Clusters."
		}
		
		Else
		{
			Write-Richtext -LogType 'Success' -LogMsg "Clusters retrieved from $($LocalOfficeSelectionComboBox.SelectedItem)."
			$ESXClustersComboBox.Items.clear()
			
			If ($Clusters)
			{
				Foreach ($Item in $Clusters)
				{
					$ESXClustersComboBox.Items.Add($($Item.name))
				}
			}
			If ($VMHosts)
			{
				Foreach ($Item in $VMHosts)
				{
					$ESXClustersComboBox.Items.Add($($Item.name))
				}
			}
			$ESXClustersComboBox.enabled = $True
		}
		
	}
	
	Function Populate-DatastoreClusterDropDown{
		
		$DataStoreClusters = Get-Cluster -Server $Global:VMCreationSelections.VCenterServer `
										 -Name $($ESXClustersComboBox.SelectedItem) `
		| Get-Datastore | Get-DatastoreCluster
		
		$DataStores = Get-VMHOST -Server $Global:VMCreationSelections.VCenterServer `
								 -Name $ESXClustersComboBox.SelectedItem `
		| Get-Datastore
		
		If (!$DataStoreClusters -and !$DataStores)
		{
			Write-Richtext -LogType 'Error' -LogMsg "Unable to pull and DataStore Clusters or Datastores from  $($ESXClustersComboBox.SelectedItem). "
		}
		
		Else
		{
			Write-Richtext -LogType 'Success' -LogMsg "DataStores or Clusters retrieved from $($ESXClustersComboBox.SelectedItem)."
			$DataStoreClusterComboBox.Items.clear()
			
			If ($DataStoreClusters)
			{
				Foreach ($Item in $DataStoreClusters)
				{
					$DataStoreClusterComboBox.Items.Add($Item.name)
				}
			}
			
			If ($DataStores)
			{
				Foreach ($Item in $DataStores)
				{
					$DataStoreClusterComboBox.Items.Add($Item.name)
				}
			}
			$DataStoreClusterComboBox.enabled = $True
		}
		
	}
	
	Function Set-VMCPUCount{
		$VM = Get-VM -Server $Global:VMCreationSelections.VCenterServer `
					 -Location $Global:VMCreationSelections.Location `
					 -Name $Global:VMCreationSelections.Name
		
		$Set = Set-VM -Server $Global:VMCreationSelections.VCenterServer `
					  -VM $VM `
					  -NumCpu $VCPUsComboBox.SelectedItem `
					  -Confirm
		
		If ($Set.numcpu -eq $VCPUsComboBox.SelectedItem)
		{
			Write-RichText -LogType success -LogMsg "VCPU Count Set to $($Set.numcpu)"
			
		}
		
		Else
		{
			Write-RichText -LogType Error -LogMsg "Unable to Set VCPU Count!!"
		}
	}
	
	Function Set-VMRamAmount{
		$VM = Get-VM -Server $Global:VMCreationSelections.VCenterServer `
					 -Location $Global:VMCreationSelections.Location `
					 -Name $Global:VMCreationSelections.Name
		
		$Set = Set-VM -Server $Global:VMCreationSelections.VCenterServer `
					  -VM $VM `
					  -MemoryGB $RamComboBox.SelectedItem `
					  -Confirm
		
		If ($Set.MemoryGB -eq $RamComboBox.SelectedItem)
		{
			Write-RichText -LogType success -LogMsg "RAM Amount (GB) Set to $($Set.numcpu)"
			
		}
		
		Else
		{
			Write-RichText -LogType Error -LogMsg "Unable to Set RAM Value!!"
		}
	}
	
	Function Add-VMDIsks{
		$VM = Get-VM -Server $Global:VMCreationSelections.VCenterServer `
					 -Location $Global:VMCreationSelections.Location `
					 -Name $Global:VMCreationSelections.Name
		
		If ($ExtraDrive1_LetterComboBox.enabled -eq $true){
			
			
			$VM | New-HardDisk -CapacityGB $ExtraDrive1_SizeTextBox.text -StorageFormat Thin
		}
		If ($ExtraDrive2_LetterComboBox.enabled -eq $true){
				New-HardDisk -VM $VM `
							 -CapacityGB $ExtraDrive2_SizeTextBox.text `
							 -Confirm $False `
							 -Server $Global:VMCreationSelections.VCenterServer `
							 -StorageFormat Thin
		}
		If ($ExtraDrive3_LetterComboBox.enabled -eq $true){
				New-HardDisk -VM $VM `
							 -CapacityGB $ExtraDrive3_SizeTextBox.text `
							 -Confirm $False `
							 -Server $Global:VMCreationSelections.VCenterServer `
							 -StorageFormat Thin
		}
		If ($ExtraDrive4_LetterComboBox.enabled -eq $true){
				New-HardDisk -VM $VM `
							 -CapacityGB $ExtraDrive4_SizeTextBox.text `
							 -Confirm $False `
							 -Server $Global:VMCreationSelections.VCenterServer `
							 -StorageFormat Thin
		}
		If ($ExtraDrive5_LetterComboBox.enabled -eq $true){
				New-HardDisk -VM $VM `
							 -CapacityGB $ExtraDrive5_SizeTextBox.text `
							 -Confirm $False `
							 -Server $Global:VMCreationSelections.VCenterServer `
							 -StorageFormat Thin
		}
	}
	
	Function Control-VisibleExtraDrives{
		
		switch ($Global:DriveCounter)
		{
			0 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $false
				$ExtraDrive1_letterComboBox.enabled = $false
				$ExtraDrive1_SelectionLabel.enabled = $false
				$ExtraDrive1SizeTextBox.enabled = $false
				$ExtraDrive1_SizeLabel.enabled = $false
				$ExtraDrive1_DatastoreLabel.enabled = $false
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $false
				$ExtraDrive2_letterComboBox.enabled = $false
				$ExtraDrive2_SelectionLabel.enabled = $false
				$ExtraDrive2SizeTextBox.enabled = $false
				$ExtraDrive2_SizeLabel.enabled = $false
				$ExtraDrive2_DatastoreLabel.enabled = $false
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $false
				$ExtraDrive3_letterComboBox.enabled = $false
				$ExtraDrive3_SelectionLabel.enabled = $false
				$ExtraDrive3SizeTextBox.enabled = $false
				$ExtraDrive3_SizeLabel.enabled = $false
				$ExtraDrive3_DatastoreLabel.enabled = $false
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SelectionLabel.enabled = $false
				$ExtraDrive4SizeTextBox.enabled = $false
				$ExtraDrive4_SizeLabel.enabled = $false
				$ExtraDrive4_DatastoreLabel.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SelectionLabel.enabled = $false
				$ExtraDrive5SizeTextBox.enabled = $false
				$ExtraDrive5_SizeLabel.enabled = $false
				$ExtraDrive5_DatastoreLabel.enabled = $false
				
			}
			1 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SelectionLabel.enabled = $true
				$ExtraDrive1SizeTextBox.enabled = $true
				$ExtraDrive1_SizeLabel.enabled = $true
				$ExtraDrive1_DatastoreLabel.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $false
				$ExtraDrive2_letterComboBox.enabled = $false
				$ExtraDrive2_SelectionLabel.enabled = $false
				$ExtraDrive2SizeTextBox.enabled = $false
				$ExtraDrive2_SizeLabel.enabled = $false
				$ExtraDrive2_DatastoreLabel.enabled = $false
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $false
				$ExtraDrive3_letterComboBox.enabled = $false
				$ExtraDrive3_SelectionLabel.enabled = $false
				$ExtraDrive3SizeTextBox.enabled = $false
				$ExtraDrive3_SizeLabel.enabled = $false
				$ExtraDrive3_DatastoreLabel.enabled = $false
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SelectionLabel.enabled = $false
				$ExtraDrive4SizeTextBox.enabled = $false
				$ExtraDrive4_SizeLabel.enabled = $false
				$ExtraDrive4_DatastoreLabel.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SelectionLabel.enabled = $false
				$ExtraDrive5SizeTextBox.enabled = $false
				$ExtraDrive5_SizeLabel.enabled = $false
				$ExtraDrive5_DatastoreLabel.enabled = $false
			}
			2 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SelectionLabel.enabled = $true
				$ExtraDrive1SizeTextBox.enabled = $true
				$ExtraDrive1_SizeLabel.enabled = $true
				$ExtraDrive1_DatastoreLabel.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SelectionLabel.enabled = $true
				$ExtraDrive2SizeTextBox.enabled = $true
				$ExtraDrive2_SizeLabel.enabled = $true
				$ExtraDrive2_DatastoreLabel.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $false
				$ExtraDrive3_letterComboBox.enabled = $false
				$ExtraDrive3_SelectionLabel.enabled = $false
				$ExtraDrive3SizeTextBox.enabled = $false
				$ExtraDrive3_SizeLabel.enabled = $false
				$ExtraDrive3_DatastoreLabel.enabled = $false
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SelectionLabel.enabled = $false
				$ExtraDrive4SizeTextBox.enabled = $false
				$ExtraDrive4_SizeLabel.enabled = $false
				$ExtraDrive4_DatastoreLabel.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SelectionLabel.enabled = $false
				$ExtraDrive5SizeTextBox.enabled = $false
				$ExtraDrive5_SizeLabel.enabled = $false
				$ExtraDrive5_DatastoreLabel.enabled = $false
			}
			3 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SelectionLabel.enabled = $true
				$ExtraDrive1SizeTextBox.enabled = $true
				$ExtraDrive1_SizeLabel.enabled = $true
				$ExtraDrive1_DatastoreLabel.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SelectionLabel.enabled = $true
				$ExtraDrive2SizeTextBox.enabled = $true
				$ExtraDrive2_SizeLabel.enabled = $true
				$ExtraDrive2_DatastoreLabel.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $true
				$ExtraDrive3_letterComboBox.enabled = $true
				$ExtraDrive3_SelectionLabel.enabled = $true
				$ExtraDrive3SizeTextBox.enabled = $true
				$ExtraDrive3_SizeLabel.enabled = $true
				$ExtraDrive3_DatastoreLabel.enabled = $true
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $false
				$ExtraDrive4_letterComboBox.enabled = $false
				$ExtraDrive4_SelectionLabel.enabled = $false
				$ExtraDrive4SizeTextBox.enabled = $false
				$ExtraDrive4_SizeLabel.enabled = $false
				$ExtraDrive4_DatastoreLabel.enabled = $false
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SelectionLabel.enabled = $false
				$ExtraDrive5SizeTextBox.enabled = $false
				$ExtraDrive5_SizeLabel.enabled = $false
				$ExtraDrive5_DatastoreLabel.enabled = $false
			}
			4 {
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SelectionLabel.enabled = $true
				$ExtraDrive1SizeTextBox.enabled = $true
				$ExtraDrive1_SizeLabel.enabled = $true
				$ExtraDrive1_DatastoreLabel.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SelectionLabel.enabled = $true
				$ExtraDrive2SizeTextBox.enabled = $true
				$ExtraDrive2_SizeLabel.enabled = $true
				$ExtraDrive2_DatastoreLabel.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $true
				$ExtraDrive3_letterComboBox.enabled = $true
				$ExtraDrive3_SelectionLabel.enabled = $true
				$ExtraDrive3SizeTextBox.enabled = $true
				$ExtraDrive3_SizeLabel.enabled = $true
				$ExtraDrive3_DatastoreLabel.enabled = $true
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $true
				$ExtraDrive4_letterComboBox.enabled = $true
				$ExtraDrive4_SelectionLabel.enabled = $true
				$ExtraDrive4SizeTextBox.enabled = $true
				$ExtraDrive4_SizeLabel.enabled = $true
				$ExtraDrive4_DatastoreLabel.enabled = $true
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $false
				$ExtraDrive5_letterComboBox.enabled = $false
				$ExtraDrive5_SelectionLabel.enabled = $false
				$ExtraDrive5SizeTextBox.enabled = $false
				$ExtraDrive5_SizeLabel.enabled = $false
				$ExtraDrive5_DatastoreLabel.enabled = $false
			}
			5{
				#ED1
				$ExtraDrive1_DataStoreComboBox.enabled = $true
				$ExtraDrive1_letterComboBox.enabled = $true
				$ExtraDrive1_SelectionLabel.enabled = $true
				$ExtraDrive1SizeTextBox.enabled = $true
				$ExtraDrive1_SizeLabel.enabled = $true
				$ExtraDrive1_DatastoreLabel.enabled = $true
				#ED2
				$ExtraDrive2_DataStoreComboBox.enabled = $true
				$ExtraDrive2_letterComboBox.enabled = $true
				$ExtraDrive2_SelectionLabel.enabled = $true
				$ExtraDrive2SizeTextBox.enabled = $true
				$ExtraDrive2_SizeLabel.enabled = $true
				$ExtraDrive2_DatastoreLabel.enabled = $true
				#ED3
				$ExtraDrive3_DataStoreComboBox.enabled = $true
				$ExtraDrive3_letterComboBox.enabled = $true
				$ExtraDrive3_SelectionLabel.enabled = $true
				$ExtraDrive3SizeTextBox.enabled = $true
				$ExtraDrive3_SizeLabel.enabled = $true
				$ExtraDrive3_DatastoreLabel.enabled = $true
				#ED4
				$ExtraDrive4_DataStoreComboBox.enabled = $true
				$ExtraDrive4_letterComboBox.enabled = $true
				$ExtraDrive4_SelectionLabel.enabled = $true
				$ExtraDrive4SizeTextBox.enabled = $true
				$ExtraDrive4_SizeLabel.enabled = $true
				$ExtraDrive4_DatastoreLabel.enabled = $true
				#ED5
				$ExtraDrive5_DataStoreComboBox.enabled = $true
				$ExtraDrive5_letterComboBox.enabled = $true
				$ExtraDrive5_SelectionLabel.enabled = $true
				$ExtraDrive5SizeTextBox.enabled = $true
				$ExtraDrive5_SizeLabel.enabled = $true
				$ExtraDrive5_DatastoreLabel.enabled = $true
			}
		}
	}
	
	Function Write-RichText{
		<#
		.SYNOPSIS
			A function to output text to a Rich Text Box.
		
		.DESCRIPTION
			This function appends text to a Rich Text Box and colors it based 
	        upon the type of message being displayed.
	
	    .PARAM Logtype
	        Used to determine if the text is a success or error message or purely
	        informational.
	
	    .PARAM LogMSG
	        The message to be added to the RichTextBox.
		
		.EXAMPLE
			Write-Richtext -LogType Error -LogMsg "This is an Error."
			Write-Richtext -LogType Success -LogMsg "This is a Success."
			Write-Richtext -LogType Informational -LogMsg "This is Informational."
		
		.NOTES
			N/A
	#>
		
		Param
		(
			[Parameter(Mandatory = $true, Position = 0, ValueFromPipeline, ValueFromPipelineByPropertyName)]
			[String]$LogType,
			[Parameter(Mandatory = $true, Position = 1, ValueFromPipeline, ValueFromPipelineByPropertyName)]
			[String]$LogMsg
		)
		
		switch ($logtype)
		{
			Error {
				$richtextbox1.SelectionColor = 'Red'
				$richtextbox1.AppendText("`n $logmsg")
				
			}
			Success {
				$richtextbox1.SelectionColor = 'Green'
				$richtextbox1.AppendText("`n $logmsg")
				
			}
			Informational {
				$richtextbox1.SelectionColor = 'Blue'
				$richtextbox1.AppendText("`n $logmsg")
				
			}
			
		}
		
	}
	
	Function Load-ExtraDriveComboBoxes{
		
		Load-ComboBox -ComboBox -$ExtraDrive1_letterComboBox `
					  -Items $Global:DriveLetterarray
		
		Load-ComboBox -ComboBox -$ExtraDrive2_letterComboBox `
					  -Items $Global:DriveLetterarray
		
		Load-ComboBox -ComboBox -$ExtraDrive3_letterComboBox `
					  -Items $Global:DriveLetterarray
		
		Load-ComboBox -ComboBox -$ExtraDrive4_letterComboBox `
					  -Items $Global:DriveLetterarray
		
		Load-ComboBox -ComboBox -$ExtraDrive5_letterComboBox `
					  -Items $Global:DriveLetterarray
	}
	
	#endregion Source: Globals.ps1

#Start the application
Main ($CommandLine)
